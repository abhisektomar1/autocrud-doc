<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AutoCRUD â€“ Flows</title>
    <link>http://localhost:1313/autocrud-doc/docs/flows/</link>
    <description>Recent content in Flows on AutoCRUD</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="http://localhost:1313/autocrud-doc/docs/flows/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Creating Flows</title>
      <link>http://localhost:1313/autocrud-doc/docs/flows/creating-flows/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/autocrud-doc/docs/flows/creating-flows/</guid>
      <description>
        
        
        &lt;h1&gt;Creating Your First Flow&lt;/h1&gt;&lt;p&gt;AutoCRUD&amp;rsquo;s visual flow builder makes it easy to create powerful automated workflows without writing code. This guide will walk you through creating your first flow.&lt;/p&gt;
&lt;h2&gt;Prerequisites&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;prerequisites&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#prerequisites&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;An AutoCRUD account with access to a workspace&lt;/li&gt;
&lt;li&gt;Basic understanding of the workflow concept&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Step 1: Access the Flows Section&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;step-1-access-the-flows-section&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#step-1-access-the-flows-section&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Navigate to your workspace dashboard&lt;/li&gt;
&lt;li&gt;Click on the &lt;strong&gt;Flows&lt;/strong&gt; icon in the left sidebar&lt;/li&gt;
&lt;li&gt;Click the &lt;strong&gt;Create Flow&lt;/strong&gt; button in the top-right corner&lt;/li&gt;
&lt;/ol&gt;
&lt;!-- CREATING FLOW SCREENSHOT --&gt;
&lt;!-- ![Create Flow Button](/images/flows-create-button.png) --&gt;
&lt;h2&gt;Step 2: Design Your Workflow&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;step-2-design-your-workflow&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#step-2-design-your-workflow&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Once in the flow builder, you&amp;rsquo;ll see a canvas where you can design your workflow:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Start with a &lt;strong&gt;Trigger Node&lt;/strong&gt; (automatically added)&lt;/li&gt;
&lt;li&gt;Use the &lt;strong&gt;+&lt;/strong&gt; button or drag nodes from the node library to add actions&lt;/li&gt;
&lt;li&gt;Connect nodes by dragging from the output of one node to the input of another&lt;/li&gt;
&lt;/ol&gt;
&lt;!-- FLOW DESIGN SCREENSHOT --&gt;
&lt;!-- ![Flow Design Interface](/images/flow-design-interface.png) --&gt;
&lt;h2&gt;Step 3: Configure Your Trigger&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;step-3-configure-your-trigger&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#step-3-configure-your-trigger&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Every flow starts with a trigger that determines when your workflow will run:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Click on the trigger node to open its configuration panel&lt;/li&gt;
&lt;li&gt;Select a trigger type:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;On Schedule&lt;/strong&gt;: Run at specified intervals&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HTTP&lt;/strong&gt;: Triggered by a webhook&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;On Demand&lt;/strong&gt;: Manually triggered&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Configure the trigger settings as needed&lt;/li&gt;
&lt;/ol&gt;
&lt;!-- TRIGGER CONFIGURATION SCREENSHOT --&gt;
&lt;!-- ![Trigger Configuration](/images/trigger-configuration.png) --&gt;
&lt;h2&gt;Step 4: Add and Configure Action Nodes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;step-4-add-and-configure-action-nodes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#step-4-add-and-configure-action-nodes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Add actions to your workflow to perform specific tasks:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Click on the + button to add a node&lt;/li&gt;
&lt;li&gt;Select from available node types:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Send Email&lt;/strong&gt;: Send email notifications&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HTTP Request&lt;/strong&gt;: Make API calls to external services&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ask Question&lt;/strong&gt;: Leverage AI for question answering&lt;/li&gt;
&lt;li&gt;And many more&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Configure each node&amp;rsquo;s parameters as required&lt;/li&gt;
&lt;/ol&gt;
&lt;!-- NODE CONFIGURATION SCREENSHOT --&gt;
&lt;!-- ![Node Configuration Panel](/images/node-config-panel.png) --&gt;
&lt;h2&gt;Step 5: Test Your Flow&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;step-5-test-your-flow&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#step-5-test-your-flow&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Before deploying your flow, you should test it to ensure it works as expected:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Click the &lt;strong&gt;Play&lt;/strong&gt; button in the toolbar to run your flow&lt;/li&gt;
&lt;li&gt;Monitor the execution in real-time&lt;/li&gt;
&lt;li&gt;Check node outputs to verify the results&lt;/li&gt;
&lt;li&gt;Make adjustments as needed&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Step 6: Save and Activate Your Flow&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;step-6-save-and-activate-your-flow&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#step-6-save-and-activate-your-flow&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Once you&amp;rsquo;re satisfied with your flow:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Give your flow a descriptive name&lt;/li&gt;
&lt;li&gt;Click the &lt;strong&gt;Save&lt;/strong&gt; button&lt;/li&gt;
&lt;li&gt;Activate your flow to make it live&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Example: Simple Email Notification Flow&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;example-simple-email-notification-flow&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#example-simple-email-notification-flow&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Let&amp;rsquo;s create a simple flow that sends an email when triggered:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Start with a trigger node (e.g., HTTP trigger)&lt;/li&gt;
&lt;li&gt;Add a &lt;strong&gt;Send Email&lt;/strong&gt; node&lt;/li&gt;
&lt;li&gt;Connect the trigger to the email node&lt;/li&gt;
&lt;li&gt;Configure the email node with recipient, subject, and content&lt;/li&gt;
&lt;li&gt;Save and test your flow&lt;/li&gt;
&lt;/ol&gt;
&lt;!-- EXAMPLE FLOW SCREENSHOT --&gt;
&lt;!-- ![Example Email Flow](/images/example-email-flow.png) --&gt;
&lt;h2&gt;Next Steps&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;next-steps&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#next-steps&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Now that you&amp;rsquo;ve created your first flow, you can:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Explore more complex workflows with multiple nodes&lt;/li&gt;
&lt;li&gt;Learn about &lt;a href=&#34;http://localhost:1313/autocrud-doc/docs/flows/triggers/&#34; &gt;Advanced Triggers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Discover all available &lt;a href=&#34;http://localhost:1313/autocrud-doc/docs/flows/nodes/&#34; &gt;Node Types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Implement &lt;a href=&#34;http://localhost:1313/autocrud-doc/docs/flows/error-handling/&#34; &gt;Error Handling&lt;/a&gt; in your flows&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Triggers</title>
      <link>http://localhost:1313/autocrud-doc/docs/flows/triggers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/autocrud-doc/docs/flows/triggers/</guid>
      <description>
        
        
        &lt;h1&gt;Flow Triggers&lt;/h1&gt;&lt;p&gt;Triggers are the starting points of your workflows. They determine when and how your flow will be executed. AutoCRUD offers several trigger types to suit different automation needs.&lt;/p&gt;
&lt;h2&gt;Available Trigger Types&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;available-trigger-types&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#available-trigger-types&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;On Schedule Trigger&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;on-schedule-trigger&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#on-schedule-trigger&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Schedule your workflows to run at specific times or intervals.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Run on a cron schedule (e.g., every hour, daily, weekly)&lt;/li&gt;
&lt;li&gt;Set specific dates and times for execution&lt;/li&gt;
&lt;li&gt;Configure timezone settings&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Use Cases:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Daily data synchronization&lt;/li&gt;
&lt;li&gt;Weekly report generation&lt;/li&gt;
&lt;li&gt;Periodic cleanup tasks&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- SCHEDULE TRIGGER SCREENSHOT --&gt;
&lt;!-- ![Schedule Trigger](/images/schedule-trigger.png) --&gt;
&lt;h3&gt;HTTP Trigger&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;http-trigger&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#http-trigger&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Trigger your workflows via webhooks when external events occur.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Unique webhook URL for each flow&lt;/li&gt;
&lt;li&gt;Support for GET, POST, PUT, DELETE methods&lt;/li&gt;
&lt;li&gt;Access to request headers, body, and query parameters&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Use Cases:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Integrating with third-party services&lt;/li&gt;
&lt;li&gt;Responding to form submissions&lt;/li&gt;
&lt;li&gt;Processing webhook notifications&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- HTTP TRIGGER SCREENSHOT --&gt;
&lt;!-- ![HTTP Trigger](/images/http-trigger.png) --&gt;
&lt;h3&gt;On Demand Trigger&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;on-demand-trigger&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#on-demand-trigger&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Manually trigger your workflows when needed.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Simple button to execute the flow&lt;/li&gt;
&lt;li&gt;Optional input parameters&lt;/li&gt;
&lt;li&gt;Immediate execution&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Use Cases:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Testing workflows during development&lt;/li&gt;
&lt;li&gt;One-time data processing tasks&lt;/li&gt;
&lt;li&gt;Manual approval processes&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- ON DEMAND TRIGGER SCREENSHOT --&gt;
&lt;!-- ![On Demand Trigger](/images/on-demand-trigger.png) --&gt;
&lt;h2&gt;Configuring Triggers&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;configuring-triggers&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#configuring-triggers&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Basic Configuration&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;basic-configuration&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#basic-configuration&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;Click on the trigger node in your flow&lt;/li&gt;
&lt;li&gt;Select the desired trigger type&lt;/li&gt;
&lt;li&gt;Configure the specific settings for that trigger&lt;/li&gt;
&lt;li&gt;Save your changes&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Advanced Options&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;advanced-options&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#advanced-options&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Depending on the trigger type, you may have access to advanced options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Retry Settings&lt;/strong&gt;: Configure automatic retries on failure&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Timeout Settings&lt;/strong&gt;: Set maximum execution time&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Input Parameters&lt;/strong&gt;: Define expected input data&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Error Handling&lt;/strong&gt;: Configure actions on trigger failure&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Best Practices&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;best-practices&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#best-practices&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Choose the Right Trigger&lt;/strong&gt;: Select the most appropriate trigger type for your automation needs&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Document Webhook URLs&lt;/strong&gt;: Keep track of webhook URLs for HTTP triggers&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Test Thoroughly&lt;/strong&gt;: Always test your triggers before deploying to production&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Monitor Execution&lt;/strong&gt;: Regularly check trigger execution logs for issues&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Set Reasonable Schedules&lt;/strong&gt;: Avoid scheduling too many flows at the same time&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Examples&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;examples&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#examples&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Daily Database Backup&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;daily-database-backup&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#daily-database-backup&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;Trigger Type: On Schedule
Schedule: Daily at 2:00 AM&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Customer Support Ticket Handler&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;customer-support-ticket-handler&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#customer-support-ticket-handler&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;Trigger Type: HTTP
Method: POST
Endpoint: /api/tickets&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Manual Data Import Process&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;manual-data-import-process&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#manual-data-import-process&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;Trigger Type: On Demand
Input Parameters: File Path&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;Troubleshooting&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;troubleshooting&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#troubleshooting&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;If your trigger isn&amp;rsquo;t working as expected:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Check the trigger configuration settings&lt;/li&gt;
&lt;li&gt;Verify that any external systems are sending data correctly&lt;/li&gt;
&lt;li&gt;Review execution logs for error messages&lt;/li&gt;
&lt;li&gt;Test the trigger manually if possible&lt;/li&gt;
&lt;li&gt;Ensure your workflow has the necessary permissions&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
    <item>
      <title>Node Types</title>
      <link>http://localhost:1313/autocrud-doc/docs/flows/nodes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/autocrud-doc/docs/flows/nodes/</guid>
      <description>
        
        
        &lt;h1&gt;Flow Nodes&lt;/h1&gt;&lt;p&gt;Nodes are the building blocks of your workflows in AutoCRUD. Each node performs a specific action, from sending emails to making HTTP requests to processing data. This guide covers all available node types and how to use them.&lt;/p&gt;
&lt;h2&gt;Basic Nodes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;basic-nodes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#basic-nodes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Send Email&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;send-email&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#send-email&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Send emails through various providers like SMTP, AWS SES, and more.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Key Features:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Configure sender and recipient information&lt;/li&gt;
&lt;li&gt;Support for HTML content&lt;/li&gt;
&lt;li&gt;Attachment capabilities&lt;/li&gt;
&lt;li&gt;Template variables support&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Configuration Options:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;To&lt;/strong&gt;: Recipient email address&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Subject&lt;/strong&gt;: Email subject line&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Body&lt;/strong&gt;: Email content&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;From&lt;/strong&gt;: Sender email address (optional)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CC/BCC&lt;/strong&gt;: Additional recipients (optional)&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- SEND EMAIL NODE SCREENSHOT --&gt;
&lt;!-- ![Send Email Node](/images/send-email-node.png) --&gt;
&lt;h3&gt;HTTP Request&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;http-request&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#http-request&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Make API calls to external services or fetch data from the web.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Key Features:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Support for all HTTP methods (GET, POST, PUT, DELETE, etc.)&lt;/li&gt;
&lt;li&gt;Custom headers and query parameters&lt;/li&gt;
&lt;li&gt;Authentication options&lt;/li&gt;
&lt;li&gt;JSON, XML, and form data handling&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Configuration Options:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;URL&lt;/strong&gt;: The endpoint to request&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Method&lt;/strong&gt;: HTTP method to use&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Headers&lt;/strong&gt;: Request headers&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Body&lt;/strong&gt;: Request body content&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Query Parameters&lt;/strong&gt;: URL parameters&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- HTTP REQUEST NODE SCREENSHOT --&gt;
&lt;!-- ![HTTP Request Node](/images/http-request-node.png) --&gt;
&lt;h3&gt;Ask Question&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;ask-question&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#ask-question&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Leverage AI to generate responses to questions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Key Features:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Natural language processing&lt;/li&gt;
&lt;li&gt;Contextual understanding&lt;/li&gt;
&lt;li&gt;Customizable responses&lt;/li&gt;
&lt;li&gt;Integration with workflow variables&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Configuration Options:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Question&lt;/strong&gt;: The prompt or query&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Context&lt;/strong&gt;: Additional context information&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Response Format&lt;/strong&gt;: How the answer should be structured&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- ASK QUESTION NODE SCREENSHOT --&gt;
&lt;!-- ![Ask Question Node](/images/ask-question-node.png) --&gt;
&lt;h2&gt;Advanced Nodes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;advanced-nodes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#advanced-nodes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;If Condition&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;if-condition&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#if-condition&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Add branching logic to your workflows based on conditions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Key Features:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Multiple condition types&lt;/li&gt;
&lt;li&gt;Comparison operators&lt;/li&gt;
&lt;li&gt;Complex logical expressions&lt;/li&gt;
&lt;li&gt;Variable reference support&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Configuration Options:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Condition Type&lt;/strong&gt;: Equal, Not Equal, Greater Than, etc.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Value A&lt;/strong&gt;: First value to compare&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Value B&lt;/strong&gt;: Second value to compare&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Operator&lt;/strong&gt;: AND, OR, NOT&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Generate Image&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;generate-image&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#generate-image&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Create images using AI-powered image generation.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Key Features:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Text-to-image conversion&lt;/li&gt;
&lt;li&gt;Style customization&lt;/li&gt;
&lt;li&gt;Size and format options&lt;/li&gt;
&lt;li&gt;Integration with other nodes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Configuration Options:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Prompt&lt;/strong&gt;: Description of the image to generate&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Style&lt;/strong&gt;: Visual style preference&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Size&lt;/strong&gt;: Dimensions of the output image&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Format&lt;/strong&gt;: Output file format&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Embeddings&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;embeddings&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#embeddings&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Generate vector embeddings for text and data.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Key Features:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Convert text to vector representations&lt;/li&gt;
&lt;li&gt;Similarity search capabilities&lt;/li&gt;
&lt;li&gt;Integration with databases&lt;/li&gt;
&lt;li&gt;Support for various embedding models&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Configuration Options:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Text&lt;/strong&gt;: Input text to convert&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Model&lt;/strong&gt;: Embedding model to use&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Dimensions&lt;/strong&gt;: Vector dimension size&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Output Format&lt;/strong&gt;: How to structure the result&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Information Extractor Schema&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;information-extractor-schema&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#information-extractor-schema&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Extract structured data from unstructured content.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Key Features:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Intelligent field extraction&lt;/li&gt;
&lt;li&gt;Schema-based parsing&lt;/li&gt;
&lt;li&gt;Support for multiple input formats&lt;/li&gt;
&lt;li&gt;Customizable output structure&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Configuration Options:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Input&lt;/strong&gt;: Text or data to process&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Schema&lt;/strong&gt;: Definition of what to extract&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Format&lt;/strong&gt;: Input format type&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Output&lt;/strong&gt;: How to structure the result&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Content Moderation&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;content-moderation&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#content-moderation&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Filter and analyze content for inappropriate material.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Key Features:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Text and image moderation&lt;/li&gt;
&lt;li&gt;Customizable sensitivity levels&lt;/li&gt;
&lt;li&gt;Detailed analysis reports&lt;/li&gt;
&lt;li&gt;Automated actions based on results&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Configuration Options:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Content&lt;/strong&gt;: Material to moderate&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Categories&lt;/strong&gt;: Types of content to flag&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Threshold&lt;/strong&gt;: Sensitivity level&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Action&lt;/strong&gt;: What to do when content is flagged&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Working with Nodes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;working-with-nodes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#working-with-nodes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Adding Nodes to a Flow&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;adding-nodes-to-a-flow&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#adding-nodes-to-a-flow&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;Click the &amp;ldquo;+&amp;rdquo; button in the flow builder&lt;/li&gt;
&lt;li&gt;Select the desired node type from the menu&lt;/li&gt;
&lt;li&gt;Position the node on the canvas&lt;/li&gt;
&lt;li&gt;Connect it to other nodes in your flow&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Configuring Nodes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;configuring-nodes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#configuring-nodes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;Click on a node to select it&lt;/li&gt;
&lt;li&gt;Use the configuration panel on the right to set options&lt;/li&gt;
&lt;li&gt;Required fields are marked with an asterisk (*)&lt;/li&gt;
&lt;li&gt;Click &amp;ldquo;Apply&amp;rdquo; or &amp;ldquo;Save&amp;rdquo; to confirm changes&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Connecting Nodes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;connecting-nodes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#connecting-nodes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;Click and drag from the output handle of one node&lt;/li&gt;
&lt;li&gt;Release on the input handle of another node&lt;/li&gt;
&lt;li&gt;A connection line will appear between the nodes&lt;/li&gt;
&lt;li&gt;Data will flow through this connection during execution&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Testing Node Output&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;testing-node-output&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#testing-node-output&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Most nodes have a &amp;ldquo;Test&amp;rdquo; button that allows you to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Execute just that node&lt;/li&gt;
&lt;li&gt;View the output data&lt;/li&gt;
&lt;li&gt;Troubleshoot configuration issues&lt;/li&gt;
&lt;li&gt;Verify correct functionality&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Best Practices&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;best-practices&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#best-practices&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Name Your Nodes&lt;/strong&gt;: Give descriptive names to make your flow easier to understand&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Organize Your Layout&lt;/strong&gt;: Arrange nodes logically from left to right&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Use Comments&lt;/strong&gt;: Add notes to explain complex parts of your workflow&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Test Incrementally&lt;/strong&gt;: Verify each node works before connecting the next one&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Handle Errors&lt;/strong&gt;: Include error handling for critical nodes&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Next Steps&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;next-steps&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#next-steps&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Now that you understand the available nodes, learn how to implement &lt;a href=&#34;http://localhost:1313/autocrud-doc/docs/flows/error-handling/&#34; &gt;Error Handling&lt;/a&gt; in your flows.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Error Handling</title>
      <link>http://localhost:1313/autocrud-doc/docs/flows/error-handling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/autocrud-doc/docs/flows/error-handling/</guid>
      <description>
        
        
        &lt;h1&gt;Error Handling in Flows&lt;/h1&gt;&lt;p&gt;Even the best-designed workflows can encounter errors. AutoCRUD provides robust error handling capabilities to help you build resilient flows that can recover from failures and provide meaningful feedback.&lt;/p&gt;
&lt;h2&gt;Understanding Flow Errors&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;understanding-flow-errors&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#understanding-flow-errors&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Errors in workflows can occur for various reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;External Service Failures&lt;/strong&gt;: APIs might be down or responding with errors&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Invalid Data&lt;/strong&gt;: Input data might not match expected formats&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Permission Issues&lt;/strong&gt;: Lack of necessary permissions for certain operations&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Timeout Errors&lt;/strong&gt;: Operations taking too long to complete&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Resource Limitations&lt;/strong&gt;: Hitting quotas or resource constraints&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Error Handling Options&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;error-handling-options&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#error-handling-options&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;AutoCRUD provides several ways to handle errors in your flows:&lt;/p&gt;
&lt;h3&gt;1. Node-Level Error Handling&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;1-node-level-error-handling&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#1-node-level-error-handling&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Each node can be configured with specific error handling behavior:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Retry&lt;/strong&gt;: Automatically retry the operation on failure&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Continue&lt;/strong&gt;: Proceed to the next node despite errors&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Stop&lt;/strong&gt;: Halt the flow execution on error&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Custom Error Path&lt;/strong&gt;: Direct flow to a specific error handling branch&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- NODE ERROR HANDLING SCREENSHOT --&gt;
&lt;!-- ![Node Error Handling](/images/node-error-handling.png) --&gt;
&lt;h3&gt;2. Try/Catch Patterns&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;2-trycatch-patterns&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#2-trycatch-patterns&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Implement a try/catch pattern in your flow design:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a main path for the &amp;ldquo;happy path&amp;rdquo; execution&lt;/li&gt;
&lt;li&gt;Create an alternative path for error handling&lt;/li&gt;
&lt;li&gt;Configure nodes to route to the error path when they fail&lt;/li&gt;
&lt;/ol&gt;
&lt;!-- TRY CATCH PATTERN SCREENSHOT --&gt;
&lt;!-- ![Try Catch Pattern](/images/try-catch-pattern.png) --&gt;
&lt;h3&gt;3. Error Notifications&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;3-error-notifications&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#3-error-notifications&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Set up notifications for when errors occur:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Email alerts when flows fail&lt;/li&gt;
&lt;li&gt;Logging to external monitoring systems&lt;/li&gt;
&lt;li&gt;Integration with chat platforms for real-time alerts&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Implementing Error Handling&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;implementing-error-handling&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#implementing-error-handling&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Configure Retry Settings&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;configure-retry-settings&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#configure-retry-settings&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;For transient errors, configure retry settings:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Select a node in your flow&lt;/li&gt;
&lt;li&gt;Open the node settings panel&lt;/li&gt;
&lt;li&gt;Navigate to the &amp;ldquo;Error Handling&amp;rdquo; tab&lt;/li&gt;
&lt;li&gt;Configure retry attempts, delays, and backoff strategy&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Sample Retry Configuration:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;Maximum Retries: 3
Initial Delay: 5 seconds
Backoff Multiplier: 2 (doubles delay after each retry)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Set Up Error Notification&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;set-up-error-notification&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#set-up-error-notification&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;For critical workflows, set up error notifications:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add a &amp;ldquo;Send Email&amp;rdquo; or &amp;ldquo;HTTP Request&amp;rdquo; node&lt;/li&gt;
&lt;li&gt;Connect it to the error path of your flow&lt;/li&gt;
&lt;li&gt;Configure it to send details about the error&lt;/li&gt;
&lt;li&gt;Include relevant context information for debugging&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Create Conditional Error Handling&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;create-conditional-error-handling&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#create-conditional-error-handling&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;For sophisticated error handling, use conditional logic:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add an &amp;ldquo;If Condition&amp;rdquo; node after a potential failure point&lt;/li&gt;
&lt;li&gt;Configure it to check for error status or codes&lt;/li&gt;
&lt;li&gt;Create different paths based on the error condition&lt;/li&gt;
&lt;li&gt;Implement appropriate recovery actions for each scenario&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Debugging and Troubleshooting&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;debugging-and-troubleshooting&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#debugging-and-troubleshooting&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;When errors occur, AutoCRUD provides tools to help you identify and fix the issues:&lt;/p&gt;
&lt;h3&gt;Execution Logs&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;execution-logs&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#execution-logs&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Every flow execution is logged with detailed information:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Timestamp of each step&lt;/li&gt;
&lt;li&gt;Input and output data for each node&lt;/li&gt;
&lt;li&gt;Error messages and stack traces&lt;/li&gt;
&lt;li&gt;Execution duration and status&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- EXECUTION LOGS SCREENSHOT --&gt;
&lt;!-- ![Execution Logs](/images/execution-logs.png) --&gt;
&lt;h3&gt;Visual Indicators&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;visual-indicators&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#visual-indicators&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The flow builder provides visual feedback on errors:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Red highlights for nodes that encountered errors&lt;/li&gt;
&lt;li&gt;Warning icons for configuration issues&lt;/li&gt;
&lt;li&gt;Status indicators for overall flow health&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Testing Tools&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;testing-tools&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#testing-tools&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Use the built-in testing tools to identify and fix errors:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Test individual nodes to isolate issues&lt;/li&gt;
&lt;li&gt;View intermediate outputs to trace data flow&lt;/li&gt;
&lt;li&gt;Simulate different input scenarios&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Best Practices&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;best-practices&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#best-practices&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Follow these best practices for effective error handling:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Anticipate Failures&lt;/strong&gt;: Identify potential failure points and plan for them&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Validate Inputs&lt;/strong&gt;: Check input data before performing operations&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Provide Context&lt;/strong&gt;: Include helpful error messages and context data&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Log Everything&lt;/strong&gt;: Maintain comprehensive logs for debugging&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Graceful Degradation&lt;/strong&gt;: Design flows to function with reduced capabilities when services are unavailable&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Regular Monitoring&lt;/strong&gt;: Set up monitoring to detect and respond to errors quickly&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Examples&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;examples&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#examples&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;API Rate Limit Handling&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;api-rate-limit-handling&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#api-rate-limit-handling&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;If encounter &amp;#34;Rate Limit Exceeded&amp;#34; error:
1. Wait for specified cooldown period
2. Retry the request
3. If still failing after 3 attempts, send notification&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Data Validation Flow&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;data-validation-flow&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#data-validation-flow&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;1. Validate input data
2. If validation fails:
   a. Log detailed validation errors
   b. Send notification with specific issues
   c. Stop processing or route to cleanup actions&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Service Dependency Handling&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;service-dependency-handling&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#service-dependency-handling&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;When external service is unavailable:
1. Try alternative service if available
2. Store request for later processing
3. Notify administrator of service outage&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;Next Steps&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;next-steps&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#next-steps&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Now that you&amp;rsquo;ve learned about error handling, explore how to &lt;a href=&#34;http://localhost:1313/autocrud-doc/docs/flows/monitoring/&#34; &gt;Monitor and Manage&lt;/a&gt; your flows for optimal performance.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Monitoring &amp; Management</title>
      <link>http://localhost:1313/autocrud-doc/docs/flows/monitoring/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/autocrud-doc/docs/flows/monitoring/</guid>
      <description>
        
        
        &lt;h1&gt;Monitoring and Managing Flows&lt;/h1&gt;&lt;p&gt;Once you&amp;rsquo;ve built and deployed your workflows, it&amp;rsquo;s essential to monitor their performance and manage them effectively. AutoCRUD provides comprehensive tools to help you keep your workflows running smoothly.&lt;/p&gt;
&lt;h2&gt;Flow Overview Dashboard&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;flow-overview-dashboard&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#flow-overview-dashboard&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;The Flows Overview page provides a centralized view of all your workflows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;See all flows in your workspace&lt;/li&gt;
&lt;li&gt;View node counts for each flow&lt;/li&gt;
&lt;li&gt;Check schedule configurations&lt;/li&gt;
&lt;li&gt;Monitor execution status&lt;/li&gt;
&lt;li&gt;Access creation and modification dates&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- FLOWS OVERVIEW SCREENSHOT --&gt;
&lt;!-- ![Flows Overview Dashboard](/images/flows-overview-dashboard.png) --&gt;
&lt;h2&gt;Execution Monitoring&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;execution-monitoring&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#execution-monitoring&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Real-time Execution Tracking&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;real-time-execution-tracking&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#real-time-execution-tracking&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Monitor your flow executions in real-time:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Click on a flow to open it&lt;/li&gt;
&lt;li&gt;Navigate to the &amp;ldquo;Executions&amp;rdquo; tab&lt;/li&gt;
&lt;li&gt;See active and completed executions&lt;/li&gt;
&lt;li&gt;View detailed execution information&lt;/li&gt;
&lt;/ol&gt;
&lt;!-- EXECUTIONS TAB SCREENSHOT --&gt;
&lt;!-- ![Executions Tab](/images/executions-tab.png) --&gt;
&lt;h3&gt;Execution Details&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;execution-details&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#execution-details&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;For each execution, you can view:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Start and end times&lt;/li&gt;
&lt;li&gt;Duration&lt;/li&gt;
&lt;li&gt;Status (Success, Failed, Running)&lt;/li&gt;
&lt;li&gt;Input and output data for each node&lt;/li&gt;
&lt;li&gt;Error messages if applicable&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Click on any execution record to see the full details, including the execution path and node-by-node results.&lt;/p&gt;
&lt;!-- EXECUTION DETAILS SCREENSHOT --&gt;
&lt;!-- ![Execution Details](/images/execution-details.png) --&gt;
&lt;h2&gt;Performance Metrics&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;performance-metrics&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#performance-metrics&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;AutoCRUD tracks key performance metrics for your flows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Execution Count&lt;/strong&gt;: Number of times a flow has run&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Success Rate&lt;/strong&gt;: Percentage of successful executions&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Average Duration&lt;/strong&gt;: Typical execution time&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Error Frequency&lt;/strong&gt;: Rate of errors by type&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Resource Usage&lt;/strong&gt;: Computational resources consumed&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Use these metrics to identify bottlenecks, optimize performance, and ensure reliability.&lt;/p&gt;
&lt;h2&gt;Managing Workflows&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;managing-workflows&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#managing-workflows&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Activating and Deactivating Flows&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;activating-and-deactivating-flows&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#activating-and-deactivating-flows&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Control when your flows are active:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Navigate to the Flows Overview page&lt;/li&gt;
&lt;li&gt;Find the flow you want to manage&lt;/li&gt;
&lt;li&gt;Use the toggle switch to activate or deactivate&lt;/li&gt;
&lt;li&gt;Deactivated flows won&amp;rsquo;t run automatically but can still be triggered manually&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Version Control&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;version-control&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#version-control&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Keep track of changes to your workflows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Each saved change creates a new version&lt;/li&gt;
&lt;li&gt;View the version history of any flow&lt;/li&gt;
&lt;li&gt;Compare different versions&lt;/li&gt;
&lt;li&gt;Revert to previous versions if needed&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Duplicating Flows&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;duplicating-flows&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#duplicating-flows&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Create copies of existing flows:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open the flow you want to duplicate&lt;/li&gt;
&lt;li&gt;Click the &amp;ldquo;Duplicate&amp;rdquo; option from the menu&lt;/li&gt;
&lt;li&gt;Give the new flow a unique name&lt;/li&gt;
&lt;li&gt;Modify as needed for your new use case&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Exporting and Importing&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;exporting-and-importing&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#exporting-and-importing&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Share workflows between workspaces:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Export flows as JSON files&lt;/li&gt;
&lt;li&gt;Import flows from JSON format&lt;/li&gt;
&lt;li&gt;Clone workflows across environments&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Alerts and Notifications&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;alerts-and-notifications&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#alerts-and-notifications&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Set up alerts to stay informed about your workflow performance:&lt;/p&gt;
&lt;h3&gt;Execution Alerts&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;execution-alerts&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#execution-alerts&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Configure notifications for execution events:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Flow start and completion&lt;/li&gt;
&lt;li&gt;Execution failures&lt;/li&gt;
&lt;li&gt;Long-running executions&lt;/li&gt;
&lt;li&gt;Custom condition triggers&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;System Notifications&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;system-notifications&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#system-notifications&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Receive updates about system-level events:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Schedule changes&lt;/li&gt;
&lt;li&gt;Version updates&lt;/li&gt;
&lt;li&gt;Maintenance notices&lt;/li&gt;
&lt;li&gt;Resource usage warnings&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Troubleshooting Common Issues&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;troubleshooting-common-issues&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#troubleshooting-common-issues&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Flow Not Triggering&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;flow-not-triggering&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#flow-not-triggering&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;If your flow isn&amp;rsquo;t triggering as expected:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Check if the flow is activated&lt;/li&gt;
&lt;li&gt;Verify the trigger configuration&lt;/li&gt;
&lt;li&gt;Look for error messages in the execution logs&lt;/li&gt;
&lt;li&gt;Ensure any external triggers are sending data correctly&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Slow Execution&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;slow-execution&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#slow-execution&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;If your flow is running slowly:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Identify bottleneck nodes using duration metrics&lt;/li&gt;
&lt;li&gt;Check for unnecessary operations&lt;/li&gt;
&lt;li&gt;Optimize data processing steps&lt;/li&gt;
&lt;li&gt;Consider refactoring complex flows into multiple simpler flows&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;High Error Rates&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;high-error-rates&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#high-error-rates&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;If your flow has a high error rate:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Review execution logs to identify patterns&lt;/li&gt;
&lt;li&gt;Check external service dependencies&lt;/li&gt;
&lt;li&gt;Implement more robust error handling&lt;/li&gt;
&lt;li&gt;Validate input data earlier in the flow&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Best Practices&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;best-practices&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#best-practices&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Regular Audits&lt;/strong&gt;: Periodically review all active flows for relevance and performance&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: Maintain clear documentation about each flow&amp;rsquo;s purpose and operation&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Testing&lt;/strong&gt;: Test flows thoroughly after any changes&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Incremental Changes&lt;/strong&gt;: Make small, incremental changes rather than large overhauls&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Consistent Naming&lt;/strong&gt;: Use a consistent naming convention for flows and nodes&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Clean Up&lt;/strong&gt;: Remove or archive obsolete flows to maintain a clean workspace&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Advanced Monitoring&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;advanced-monitoring&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#advanced-monitoring&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Custom Dashboards&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;custom-dashboards&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#custom-dashboards&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Create custom dashboards for monitoring specific metrics:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Define the metrics you want to track&lt;/li&gt;
&lt;li&gt;Configure visualization preferences&lt;/li&gt;
&lt;li&gt;Set up refresh intervals&lt;/li&gt;
&lt;li&gt;Share dashboards with team members&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Logging Integration&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;logging-integration&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#logging-integration&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Integrate with external logging systems:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Send execution logs to centralized logging platforms&lt;/li&gt;
&lt;li&gt;Configure log detail levels&lt;/li&gt;
&lt;li&gt;Implement structured logging for better analysis&lt;/li&gt;
&lt;li&gt;Set up log retention policies&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Next Steps&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;next-steps&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#next-steps&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Now that you understand how to monitor and manage your flows, learn about &lt;a href=&#34;http://localhost:1313/autocrud-doc/docs/flows/variables/&#34; &gt;Variables and Data Handling&lt;/a&gt; to make your workflows more dynamic and flexible.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Variables &amp; Data Handling</title>
      <link>http://localhost:1313/autocrud-doc/docs/flows/variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/autocrud-doc/docs/flows/variables/</guid>
      <description>
        
        
        &lt;h1&gt;Variables and Data Handling&lt;/h1&gt;&lt;p&gt;Variables are essential for building dynamic and reusable workflows in AutoCRUD. They allow you to store, transform, and pass data between nodes in your flows, making your automations more powerful and flexible.&lt;/p&gt;
&lt;h2&gt;Types of Variables&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;types-of-variables&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#types-of-variables&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;AutoCRUD supports several types of variables:&lt;/p&gt;
&lt;h3&gt;Global Variables&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;global-variables&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#global-variables&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Global variables are available across all flows in your workspace:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Accessible from any flow&lt;/li&gt;
&lt;li&gt;Set through the Variables section&lt;/li&gt;
&lt;li&gt;Great for configuration values, API keys, etc.&lt;/li&gt;
&lt;li&gt;Centralized management for easier updates&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- GLOBAL VARIABLES SCREENSHOT --&gt;
&lt;!-- ![Global Variables](/images/global-variables.png) --&gt;
&lt;h3&gt;Flow Variables&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;flow-variables&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#flow-variables&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Flow variables are specific to a single flow:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Defined within a flow&lt;/li&gt;
&lt;li&gt;Used for flow-specific data&lt;/li&gt;
&lt;li&gt;Not accessible from other flows&lt;/li&gt;
&lt;li&gt;Reset with each flow execution&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Node Output Variables&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;node-output-variables&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#node-output-variables&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Each node in your flow produces output that can be used as variables:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Automatically available to downstream nodes&lt;/li&gt;
&lt;li&gt;Referenced using a special syntax&lt;/li&gt;
&lt;li&gt;Contains all data produced by the node&lt;/li&gt;
&lt;li&gt;Structured as objects with properties&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Working with Variables&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;working-with-variables&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#working-with-variables&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Accessing Variables&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;accessing-variables&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#accessing-variables&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;You can access variables in most node configuration fields using the following syntax:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Global Variables&lt;/strong&gt;: &lt;code&gt;{{ globals.variableName }}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Flow Variables&lt;/strong&gt;: &lt;code&gt;{{ flow.variableName }}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Node Outputs&lt;/strong&gt;: &lt;code&gt;{{ nodes.nodeName.output.propertyName }}&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- VARIABLE SYNTAX SCREENSHOT --&gt;
&lt;!-- ![Variable Syntax](/images/variable-syntax.png) --&gt;
&lt;h3&gt;Setting Variables&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;setting-variables&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#setting-variables&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;There are multiple ways to set variable values:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Global Variables Dashboard&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Navigate to the Variables section&lt;/li&gt;
&lt;li&gt;Click &amp;ldquo;Add Variable&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Enter name, description, and value&lt;/li&gt;
&lt;li&gt;Save changes&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Set Variable Node&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add a &amp;ldquo;Set Variable&amp;rdquo; node to your flow&lt;/li&gt;
&lt;li&gt;Configure variable name and value&lt;/li&gt;
&lt;li&gt;Connect it in your flow&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Node Outputs&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Output from each node is automatically available as variables&lt;/li&gt;
&lt;li&gt;No explicit action needed to create these variables&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Variable Scope and Lifecycle&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;variable-scope-and-lifecycle&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#variable-scope-and-lifecycle&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Understanding variable scope is important:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Global Variables&lt;/strong&gt;: Persist across all flows and executions&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Flow Variables&lt;/strong&gt;: Exist only during a single flow execution&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Node Output Variables&lt;/strong&gt;: Available only to downstream nodes in the same execution&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Data Transformation&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;data-transformation&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#data-transformation&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;AutoCRUD provides several ways to transform and manipulate data:&lt;/p&gt;
&lt;h3&gt;Using Expressions&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;using-expressions&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#using-expressions&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Use expressions to transform data:&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;{{ nodes.inputNode.output.value * 2 }}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;{{ &amp;#34;Hello, &amp;#34; &amp;#43; nodes.nameInput.output.name }}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;JSON Transformation Node&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;json-transformation-node&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#json-transformation-node&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;For complex data transformations:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add a &amp;ldquo;Transform&amp;rdquo; node to your flow&lt;/li&gt;
&lt;li&gt;Define the transformation using a mapping interface&lt;/li&gt;
&lt;li&gt;Connect it to input and output nodes&lt;/li&gt;
&lt;/ol&gt;
&lt;!-- TRANSFORM NODE SCREENSHOT --&gt;
&lt;!-- ![Transform Node](/images/transform-node.png) --&gt;
&lt;h3&gt;Code Node&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;code-node&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#code-node&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;For advanced transformations:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add a &amp;ldquo;Code&amp;rdquo; node to your flow&lt;/li&gt;
&lt;li&gt;Write JavaScript/TypeScript code&lt;/li&gt;
&lt;li&gt;Access input variables and produce output&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Example code in a Code node
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;$input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;transformed&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;fullName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;firstName&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt; &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;lastName&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;isAdult&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;18&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;transformed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;Data Types&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;data-types&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#data-types&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;AutoCRUD workflows support various data types:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Strings&lt;/strong&gt;: Text values&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Numbers&lt;/strong&gt;: Numeric values&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Booleans&lt;/strong&gt;: True/false values&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Arrays&lt;/strong&gt;: Lists of values&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Objects&lt;/strong&gt;: Key-value pairs&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Dates&lt;/strong&gt;: Date and time values&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Null&lt;/strong&gt;: Empty/no value&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Each data type has specific operations and functionality available.&lt;/p&gt;
&lt;h2&gt;Working with Arrays&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;working-with-arrays&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#working-with-arrays&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Arrays (lists) are commonly used in workflows:&lt;/p&gt;
&lt;h3&gt;Iterating Over Arrays&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;iterating-over-arrays&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#iterating-over-arrays&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Process each item in an array:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add a &amp;ldquo;Loop&amp;rdquo; node to your flow&lt;/li&gt;
&lt;li&gt;Connect it to a node that outputs an array&lt;/li&gt;
&lt;li&gt;Configure subsequent nodes to process each item&lt;/li&gt;
&lt;/ol&gt;
&lt;!-- LOOP NODE SCREENSHOT --&gt;
&lt;!-- ![Loop Node](/images/loop-node.png) --&gt;
&lt;h3&gt;Array Operations&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;array-operations&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#array-operations&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Perform common array operations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Map&lt;/strong&gt;: Transform each item in an array&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Filter&lt;/strong&gt;: Select items matching criteria&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Reduce&lt;/strong&gt;: Combine array items into a single value&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Find&lt;/strong&gt;: Locate specific items in an array&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Working with Objects&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;working-with-objects&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#working-with-objects&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Objects (key-value pairs) help organize complex data:&lt;/p&gt;
&lt;h3&gt;Accessing Object Properties&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;accessing-object-properties&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#accessing-object-properties&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Access properties using dot notation:&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;{{ nodes.userData.output.user.address.city }}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Creating and Modifying Objects&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;creating-and-modifying-objects&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#creating-and-modifying-objects&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Create or modify objects using expressions:&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;{
  &amp;#34;name&amp;#34;: {{ nodes.inputNode.output.name }},
  &amp;#34;email&amp;#34;: {{ nodes.inputNode.output.email }},
  &amp;#34;createdAt&amp;#34;: {{ &amp;#34;now&amp;#34; | date }}
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;Best Practices&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;best-practices&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#best-practices&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Follow these best practices for effective variable usage:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Descriptive Names&lt;/strong&gt;: Use clear, descriptive variable names&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: Add descriptions to global variables&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Type Consistency&lt;/strong&gt;: Maintain consistent data types&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Default Values&lt;/strong&gt;: Provide default values when possible&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Validation&lt;/strong&gt;: Validate variable values before using them&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Security&lt;/strong&gt;: Don&amp;rsquo;t store sensitive data in plaintext variables&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Organization&lt;/strong&gt;: Group related variables logically&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Common Variable Patterns&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;common-variable-patterns&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#common-variable-patterns&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Configuration Variables&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;configuration-variables&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#configuration-variables&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Store configuration in global variables:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;API endpoints&lt;/li&gt;
&lt;li&gt;Default values&lt;/li&gt;
&lt;li&gt;Feature flags&lt;/li&gt;
&lt;li&gt;Environment-specific settings&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Data Passing&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;data-passing&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#data-passing&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Pass data between different parts of your flow:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Store intermediate results&lt;/li&gt;
&lt;li&gt;Pass user inputs through multiple steps&lt;/li&gt;
&lt;li&gt;Accumulate results across iterations&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Conditional Logic&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;conditional-logic&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#conditional-logic&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Use variables for dynamic behavior:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Change flow behavior based on variable values&lt;/li&gt;
&lt;li&gt;Implement different paths based on data&lt;/li&gt;
&lt;li&gt;Toggle features on/off&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Troubleshooting Variables&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;troubleshooting-variables&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#troubleshooting-variables&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Common issues and solutions:&lt;/p&gt;
&lt;h3&gt;Variable Not Found&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;variable-not-found&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#variable-not-found&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;If a variable isn&amp;rsquo;t available:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Check the variable name and syntax&lt;/li&gt;
&lt;li&gt;Verify the node producing the variable is upstream&lt;/li&gt;
&lt;li&gt;Check for typos in the variable reference&lt;/li&gt;
&lt;li&gt;Ensure the variable is within scope&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Incorrect Data Type&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;incorrect-data-type&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#incorrect-data-type&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;If a variable has the wrong data type:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Use transformation nodes to convert the type&lt;/li&gt;
&lt;li&gt;Add explicit type conversion in expressions&lt;/li&gt;
&lt;li&gt;Validate data earlier in the flow&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Variable Value Unexpected&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;variable-value-unexpected&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#variable-value-unexpected&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;If a variable doesn&amp;rsquo;t contain expected data:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add a &amp;ldquo;Debug&amp;rdquo; node to inspect the variable value&lt;/li&gt;
&lt;li&gt;Check upstream nodes for correct output&lt;/li&gt;
&lt;li&gt;Verify the data source is providing expected values&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
    <item>
      <title>Tables &amp; Flows Integration</title>
      <link>http://localhost:1313/autocrud-doc/docs/flows/tables-integration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/autocrud-doc/docs/flows/tables-integration/</guid>
      <description>
        
        
        &lt;h1&gt;Integrating Tables with Flows&lt;/h1&gt;&lt;p&gt;One of the most powerful features of AutoCRUD is the ability to connect your tables with automated workflows. This guide shows you how to use flows to automate operations on your tables, creating powerful data-driven applications.&lt;/p&gt;
&lt;h2&gt;Understanding Table Automation&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;understanding-table-automation&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#understanding-table-automation&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;By connecting tables with flows, you can:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Trigger workflows when table data changes&lt;/li&gt;
&lt;li&gt;Automatically update records based on conditions&lt;/li&gt;
&lt;li&gt;Process data and perform calculations&lt;/li&gt;
&lt;li&gt;Connect your table data with external services&lt;/li&gt;
&lt;li&gt;Build complete business processes around your data&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- TABLE AUTOMATION OVERVIEW --&gt;
&lt;!-- ![Table Automation Overview](/images/table-automation-overview.png) --&gt;
&lt;h2&gt;Table-Related Flow Triggers&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;table-related-flow-triggers&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#table-related-flow-triggers&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Record Created Trigger&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;record-created-trigger&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#record-created-trigger&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Start a flow when a new record is created in a table:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a new flow&lt;/li&gt;
&lt;li&gt;Select &amp;ldquo;Record Created&amp;rdquo; as the trigger type&lt;/li&gt;
&lt;li&gt;Choose the table to monitor&lt;/li&gt;
&lt;li&gt;Configure any additional options (filters, etc.)&lt;/li&gt;
&lt;li&gt;The flow will run each time a new record is created&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Use cases&lt;/strong&gt;: Send welcome emails, create related records, initiate approval processes&lt;/p&gt;
&lt;h3&gt;Record Updated Trigger&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;record-updated-trigger&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#record-updated-trigger&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Trigger a flow when a record in a table is modified:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a new flow&lt;/li&gt;
&lt;li&gt;Select &amp;ldquo;Record Updated&amp;rdquo; as the trigger type&lt;/li&gt;
&lt;li&gt;Choose the table to monitor&lt;/li&gt;
&lt;li&gt;Optionally specify which fields to watch for changes&lt;/li&gt;
&lt;li&gt;Configure any additional filters&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Use cases&lt;/strong&gt;: Notification systems, status updates, audit logging, data synchronization&lt;/p&gt;
&lt;h3&gt;Record Deleted Trigger&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;record-deleted-trigger&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#record-deleted-trigger&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Run a flow when a record is deleted from a table:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a new flow&lt;/li&gt;
&lt;li&gt;Select &amp;ldquo;Record Deleted&amp;rdquo; as the trigger type&lt;/li&gt;
&lt;li&gt;Choose the table to monitor&lt;/li&gt;
&lt;li&gt;Configure any additional options&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Use cases&lt;/strong&gt;: Cleanup related records, archive data, send notifications&lt;/p&gt;
&lt;h3&gt;View Button Trigger&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;view-button-trigger&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#view-button-trigger&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Add a custom button to a table view that triggers a flow:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a new flow&lt;/li&gt;
&lt;li&gt;Select &amp;ldquo;View Button&amp;rdquo; as the trigger type&lt;/li&gt;
&lt;li&gt;Choose the table and view&lt;/li&gt;
&lt;li&gt;Configure the button appearance and behavior&lt;/li&gt;
&lt;li&gt;The flow will run when users click the button&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Use cases&lt;/strong&gt;: Bulk operations, custom actions, process initiation&lt;/p&gt;
&lt;!-- VIEW BUTTON TRIGGER SCREENSHOT --&gt;
&lt;!-- ![View Button Trigger](/images/view-button-trigger.png) --&gt;
&lt;h2&gt;Table Operation Nodes&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;table-operation-nodes&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#table-operation-nodes&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;AutoCRUD provides several nodes for interacting with tables in your flows:&lt;/p&gt;
&lt;h3&gt;Create Record Node&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;create-record-node&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#create-record-node&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Add new records to a table:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add a &amp;ldquo;Create Record&amp;rdquo; node to your flow&lt;/li&gt;
&lt;li&gt;Select the target table&lt;/li&gt;
&lt;li&gt;Map data to the fields you want to populate&lt;/li&gt;
&lt;li&gt;Configure additional options (error handling, etc.)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;: Creating a customer record after a form submission&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;{
  &amp;#34;name&amp;#34;: &amp;#34;{{trigger.data.name}}&amp;#34;,
  &amp;#34;email&amp;#34;: &amp;#34;{{trigger.data.email}}&amp;#34;,
  &amp;#34;createdAt&amp;#34;: &amp;#34;{{now()}}&amp;#34;
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Find Records Node&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;find-records-node&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#find-records-node&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Query tables to find specific records:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add a &amp;ldquo;Find Records&amp;rdquo; node to your flow&lt;/li&gt;
&lt;li&gt;Select the table to query&lt;/li&gt;
&lt;li&gt;Configure filter conditions&lt;/li&gt;
&lt;li&gt;Specify sorting and limits if needed&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;: Finding all overdue tasks&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;{
  &amp;#34;where&amp;#34;: {
    &amp;#34;dueDate&amp;#34;: { &amp;#34;lt&amp;#34;: &amp;#34;{{now()}}&amp;#34; },
    &amp;#34;status&amp;#34;: { &amp;#34;ne&amp;#34;: &amp;#34;Completed&amp;#34; }
  },
  &amp;#34;limit&amp;#34;: 100,
  &amp;#34;sort&amp;#34;: [{ &amp;#34;field&amp;#34;: &amp;#34;dueDate&amp;#34;, &amp;#34;direction&amp;#34;: &amp;#34;asc&amp;#34; }]
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Update Record Node&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;update-record-node&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#update-record-node&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Modify existing records in a table:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add an &amp;ldquo;Update Record&amp;rdquo; node to your flow&lt;/li&gt;
&lt;li&gt;Select the target table&lt;/li&gt;
&lt;li&gt;Specify how to identify the record(s) to update&lt;/li&gt;
&lt;li&gt;Define the fields and values to update&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;: Marking a task as completed&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;{
  &amp;#34;where&amp;#34;: { &amp;#34;id&amp;#34;: &amp;#34;{{trigger.data.recordId}}&amp;#34; },
  &amp;#34;update&amp;#34;: {
    &amp;#34;status&amp;#34;: &amp;#34;Completed&amp;#34;,
    &amp;#34;completedAt&amp;#34;: &amp;#34;{{now()}}&amp;#34;
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Delete Record Node&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;delete-record-node&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#delete-record-node&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Remove records from a table:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add a &amp;ldquo;Delete Record&amp;rdquo; node to your flow&lt;/li&gt;
&lt;li&gt;Select the target table&lt;/li&gt;
&lt;li&gt;Specify how to identify the record(s) to delete&lt;/li&gt;
&lt;li&gt;Configure confirmation and safety options&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;: Deleting old archive records&lt;/p&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;{
  &amp;#34;where&amp;#34;: {
    &amp;#34;createdAt&amp;#34;: { &amp;#34;lt&amp;#34;: &amp;#34;{{addDays(now(), -365)}}&amp;#34; },
    &amp;#34;status&amp;#34;: &amp;#34;Archived&amp;#34;
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;Common Automation Scenarios&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;common-automation-scenarios&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#common-automation-scenarios&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Data Enrichment&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;data-enrichment&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#data-enrichment&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Automatically enhance records with additional data:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Trigger on record creation/update&lt;/li&gt;
&lt;li&gt;Use HTTP Request nodes to fetch external data&lt;/li&gt;
&lt;li&gt;Update the record with the enriched information&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;: Adding company information to a contact record by looking up their email domain&lt;/p&gt;
&lt;h3&gt;Approval Workflows&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;approval-workflows&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#approval-workflows&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Create multi-step approval processes:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Trigger when a record status changes to &amp;ldquo;Pending Approval&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Send notification to approvers&lt;/li&gt;
&lt;li&gt;Create approval tasks or records&lt;/li&gt;
&lt;li&gt;Update the original record based on approval decisions&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Data Synchronization&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;data-synchronization&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#data-synchronization&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Keep multiple tables or systems in sync:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Trigger when records change&lt;/li&gt;
&lt;li&gt;Transform data as needed&lt;/li&gt;
&lt;li&gt;Update corresponding records in other tables or external systems&lt;/li&gt;
&lt;li&gt;Log synchronization activities&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Notifications and Alerts&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;notifications-and-alerts&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#notifications-and-alerts&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Send alerts based on table conditions:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Trigger on record updates&lt;/li&gt;
&lt;li&gt;Check if conditions meet alert criteria&lt;/li&gt;
&lt;li&gt;Send notifications via email, Slack, or other channels&lt;/li&gt;
&lt;li&gt;Update record to acknowledge the alert&lt;/li&gt;
&lt;/ol&gt;
&lt;!-- NOTIFICATION WORKFLOW SCREENSHOT --&gt;
&lt;!-- ![Notification Workflow](/images/notification-workflow.png) --&gt;
&lt;h2&gt;Advanced Table Automation Techniques&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;advanced-table-automation-techniques&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#advanced-table-automation-techniques&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Batch Processing&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;batch-processing&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#batch-processing&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Process multiple records in a single flow run:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Use a scheduled trigger or manual button&lt;/li&gt;
&lt;li&gt;Find records matching your criteria&lt;/li&gt;
&lt;li&gt;Loop through the records&lt;/li&gt;
&lt;li&gt;Process each record with your business logic&lt;/li&gt;
&lt;li&gt;Update processing status&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Conditional Record Creation&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;conditional-record-creation&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#conditional-record-creation&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Create records based on complex conditions:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Trigger on an event&lt;/li&gt;
&lt;li&gt;Evaluate conditions using If nodes&lt;/li&gt;
&lt;li&gt;Create different record types based on conditions&lt;/li&gt;
&lt;li&gt;Link the new records appropriately&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Cascading Updates&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;cascading-updates&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#cascading-updates&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Update related records automatically:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Trigger when a parent record changes&lt;/li&gt;
&lt;li&gt;Find all related child records&lt;/li&gt;
&lt;li&gt;Update the child records based on parent changes&lt;/li&gt;
&lt;li&gt;Optionally trigger further workflows&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Form to Table Automation&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;form-to-table-automation&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#form-to-table-automation&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Create complete data collection workflows:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Design a form view for data entry&lt;/li&gt;
&lt;li&gt;Trigger a flow when the form is submitted&lt;/li&gt;
&lt;li&gt;Validate and process the submitted data&lt;/li&gt;
&lt;li&gt;Create records in multiple related tables&lt;/li&gt;
&lt;li&gt;Send confirmation notifications&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Best Practices&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;best-practices&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#best-practices&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Performance Considerations&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;performance-considerations&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#performance-considerations&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Limit the frequency of triggers for high-volume tables&lt;/li&gt;
&lt;li&gt;Use indexing for fields used in filtering&lt;/li&gt;
&lt;li&gt;Batch operations when possible&lt;/li&gt;
&lt;li&gt;Implement error handling and retry logic&lt;/li&gt;
&lt;li&gt;Monitor flow execution times&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Data Integrity&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;data-integrity&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#data-integrity&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Validate data before creating or updating records&lt;/li&gt;
&lt;li&gt;Implement transaction-like patterns for multi-table updates&lt;/li&gt;
&lt;li&gt;Create audit trails for important changes&lt;/li&gt;
&lt;li&gt;Use rollback mechanisms for failed operations&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Maintenance and Monitoring&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;maintenance-and-monitoring&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#maintenance-and-monitoring&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Document your automations&lt;/li&gt;
&lt;li&gt;Set up monitoring for failed flows&lt;/li&gt;
&lt;li&gt;Review flow execution logs regularly&lt;/li&gt;
&lt;li&gt;Test flows thoroughly before deployment&lt;/li&gt;
&lt;li&gt;Use descriptive naming for flows and nodes&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Troubleshooting&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;troubleshooting&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#troubleshooting&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Common Issues&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;common-issues&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#common-issues&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Issue&lt;/strong&gt;: Flow not triggering on record changes
&lt;strong&gt;Solution&lt;/strong&gt;: Check trigger configuration and ensure it matches the expected changes&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Issue&lt;/strong&gt;: Record updates not working
&lt;strong&gt;Solution&lt;/strong&gt;: Verify record identification conditions and field mappings&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Issue&lt;/strong&gt;: Flow running too slowly
&lt;strong&gt;Solution&lt;/strong&gt;: Optimize database queries, reduce complexity, batch operations&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Issue&lt;/strong&gt;: Circular update issues
&lt;strong&gt;Solution&lt;/strong&gt;: Implement guards against recursive triggering&lt;/p&gt;
&lt;h2&gt;Next Steps&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;next-steps&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#next-steps&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Now that you know how to integrate tables with flows, explore:&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
